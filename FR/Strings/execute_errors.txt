@error_code_after_block = Il ne devrait pas y avoir de code ici. Essaie de le supprimer ou de le mettre sur une nouvelle ligne.
@error_wrong_number_args = {0} prend {1} arguments.
@error_expected_no_args = {0} ne prend aucun argument.
@error_wrong_args = L'argument {0} de {1} était {2}. Ce n'est pas un argument valide.
@error_syntax_error_in_import = Le module importé a une erreur de syntaxe.
@error_module_not_found = Un module avec ce nom n'existe pas. Le nom doit correspondre à un nom de fichier. C'est le nom affiché en haut de la fenêtre.
@error_list_element_not_found = {0} n'est pas un élément de la liste.
@error_set_element_not_found = {0} n'est pas un élément du set.
@error_index_out_of_bounds = L'index {0} était en dehors des limites de la liste {1}.
@error_index_out_of_bounds2 = L'index était en dehors des limites de la liste.
@error_arith_assign_not_used_on_number = {0} ne peut être utilisé que sur des nombres.
@error_bool_op_not_used_on_bool = Un opérateur logique ne peut être utilisé que sur des expressions booléennes qui s'évaluent à `True` ou `False`.
@error_bad_bin_operator = L'opérateur {0} ne peut pas être utilisé sur les opérandes {1} et {2}.
@error_bad_unary_operator = L'opérateur {0} ne peut pas être utilisé sur {1}.
@error_index = {0} ne peut pas être utilisé comme index sur {1}.
@error_index_on_non_indexable = Tu ne peux pas indexer dans {0}.
@error_zero_step = La taille du pas ne peut pas être zéro.
@error_index_on_tuple = Tu ne peux pas assigner un élément de tuple car les tuples sont immuables.
@error_bad_key = {0} ne peut pas être utilisé comme clé.
@error_slice_dict = Impossible de découper les dictionnaires.
@error_key = {0} n'est pas une clé dans le dictionnaire.
@error_condition_not_bool = {0} n'est pas une condition valide. La condition doit être une valeur booléenne. Cela signifie qu'elle doit être une expression qui est toujours soit `True`, soit `False`.
@error_for_requires_iterable = {0} ne peut pas être itéré dans une boucle for. La boucle for doit recevoir une séquence à itérer. Exemple :

`for i in range(5):`
Ici range(5) renvoie la séquence `0,1,2,3,4`.
@error_no_loop_to_break = `break` ne peut être utilisé qu'à l'intérieur d'une boucle.
@error_no_loop_to_continue = `continue` ne peut être utilisé qu'à l'intérieur d'une boucle.
@error_no_function_to_return_from = `return` ne peut être utilisé qu'à l'intérieur d'une fonction.
@error_missing_unlock = Ceci doit être débloqué avant de pouvoir être utilisé.
@error_missing_x_unlock = {0} doit être débloqué avant que ceci puisse être utilisé.
@error_name_not_defined = {0} n'a jamais été défini. Tu dois assigner une valeur à une variable avant de l'utiliser.
@error_missing_import = {0} n'a jamais été défini. Il semble être défini dans le fichier {1}. As-tu oublié de l'importer ? 
Si tu l'as importé, tu as probablement un cycle d'importation (voir la page de documentation sur l'importation).
@error_missing_import_before_unlock = {0} n'a jamais été défini. Il semble être défini dans le fichier {1}. Tu dois débloquer les importations pour pouvoir importer des choses depuis d'autres fichiers.
@error_missing_module_access = {0} n'a jamais été défini. Il semble pourtant être défini dans le fichier {1} que tu as importé mais tu ne l'utilises pas. Tu dois y accéder en utilisant le nom du module, comme ceci :

{1}`.`{0}
@error_call_before_def = {0} n'est pas défini. Il semble être défini quelque part dans ce fichier, mais la définition n'a pas encore été exécutée. Les fonctions ne peuvent être appelées qu'après l'instruction `def`.
@error_not_a_function = Tu as essayé d'appeler quelque chose qui n'est pas une fonction. Une erreur courante qui peut causer cela est d'avoir une variable avec le même nom que la fonction.
@error_invalid_const = {0} n'existe pas.
@error_invalid_const2 = Ceci n'existe pas.
@error_max_stack_size_reached = La taille maximale de la pile d'appels a été atteinte. C'est très probablement dû à un trop grand nombre d'appels de fonctions récursives.
@error_max_comparison_depth = La profondeur de comparaison maximale a été atteinte. Cela pourrait arriver, par exemple, si tu compares des listes qui se contiennent elles-mêmes.
@error_assign_type_mismatch = Le côté gauche de l'affectation ne correspondait pas au côté droit.
@error_too_many_values_to_unpack = Le côté droit ne contient pas assez de valeurs à décompresser.
@error_not_enough_values = Le côté droit contient trop de valeurs pour être décompressées dans le côté gauche.
@error_empty_print = `print()` requiert au moins un argument.
@error_in_string = Impossible de vérifier si {0} est dans une chaîne de caractères.
@error_collection_changed_size_during_iteration = La taille de cette collection ne peut pas être modifiée dans une boucle for qui itère dessus. C'est parce que changer la taille de la collection invaliderait l'objet itérateur que la boucle for utilise.
@error_wrong_use_of_max = Impossible de calculer le max de {0}.
@error_wrong_use_of_min = Impossible de calculer le min de {0}.
@error_function_as_condition = Essayer de vérifier si la fonction {0} est `True`. Il s'agit de l'objet fonction lui-même, et non de la valeur de retour de la fonction. Voulais-tu appeler la fonction avec l'opérateur d'appel `()` ? 

En Python, les objets fonctions sont considérés comme vrais (truthy), ce qui signifie que si tu les utilises comme conditions, ils fonctionnent comme `True`, donc Python ne te donnerait pas ce message d'erreur. 

Ceci est un message d'erreur de protection, tu peux le désactiver dans les options s'il te gêne.
@error_function_in_operator = Essayer d'utiliser {1} sur la fonction {0}. Il s'agit de l'objet fonction lui-même, et non de la valeur de retour de la fonction. Voulais-tu appeler la fonction avec l'opérateur d'appel `()` ? 

Ceci est un message d'erreur de protection, tu peux le désactiver dans les options s'il te gêne.
@error_zero_step_size = La taille du pas ne peut pas être 0.
@error_sequence_too_large = La séquence était trop grande pour être copiée.
@error_invalid_sim_unlocks = Les déblocages de départ étaient invalides. Il doit s'agir d'une séquence de déblocages ou de tuples de la forme `(Unlock.Carrots, 3)`.
@error_invalid_sim_items = Les objets de départ étaient invalides. Il doit s'agir d'un dict associant des objets à des nombres comme `{Items.Hay : 100}`.
@error_invalid_sim_globals = Les globales de départ étaient invalides. Il doit s'agir d'un dict associant des noms de variables à des valeurs comme `{"x" : 42}`.
@error_division_by_zero = Oh non ! Tu as divisé par `0`. Tu y as survécu de justesse.
@error_negative_use_item = La quantité d'objets à utiliser doit être d'au moins `1`. Elle était de {0}.
@error_use_before_assign = Tentative de lecture de la variable {0} avant qu'une valeur ne lui soit assignée. 
Si tu veux modifier une variable globale, tu dois utiliser le mot-clé `global` pour écrire dans la portée globale.

`global x
x += 1`
@error_attribute_on_non_module = Tu ne peux pas assigner un attribut à {0}.
@error_file_not_found = Le fichier {0} n'existe pas.
@error_max_drones_reached = La limite de drones a été dépassée.
@error_dino_hat_already_used = Il n'y a qu'un seul chapeau de dinosaure et il est déjà utilisé. Tu ne peux pas l'utiliser sur un deuxième drone.
@error_invalid_drone_id = Il n'y a pas de drone avec l'ID {0}.
@error_invalid_handle = {0} n'existe plus.
@error_spawn_drone_builtin = Tu ne peux pas utiliser `spawn_drone()` directement avec les fonctions intégrées. Tu dois définir ta propre fonction.