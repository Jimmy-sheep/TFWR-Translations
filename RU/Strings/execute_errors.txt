@error_code_after_block = Здесь не должно быть кода. Удали его или перенеси на новую строку.
@error_wrong_number_args = {0} принимает аргументы: {1}.
@error_expected_no_args = {0} не принимает аргументы.
@error_wrong_args = Аргумент {0} для {1} — {2}. Это недопустимый аргумент.
@error_syntax_error_in_import = Импортированный модуль содержит синтаксическую ошибку.
@error_module_not_found = Модуль с таким именем не существует. Имя должно совпадать с именем файла. Оно отображается в верхней части окна.
@error_list_element_not_found = {0} не является элементом списка.
@error_set_element_not_found = {0} не является элементом множества.
@error_index_out_of_bounds = Индекс {0} за пределами списка {1}.
@error_index_out_of_bounds2 = Индекс за пределами списка.
@error_arith_assign_not_used_on_number = {0} используется только с числами.
@error_bool_op_not_used_on_bool = Логический оператор используется только с логическими выражениями, которые вычисляются как `True` или `False`.
@error_bad_bin_operator = Оператор {0} не применяется к операндам {1} и {2}.
@error_bad_unary_operator = Оператор {0} не применяется к {1}.
@error_index = {0} не используется как индекс для {1}.
@error_index_on_non_indexable = Нельзя вызвать элемент по индексу из {0}.
@error_zero_step = Размер шага не может быть равен нулю.
@error_index_on_tuple = Нельзя присвоить значение элементу кортежа, так как кортежи неизменяемы.
@error_bad_key = {0} не используется как ключ.
@error_slice_dict = Нельзя делать срез словарей.
@error_key = {0} не является ключом в словаре.
@error_condition_not_bool = {0} не является допустимым условием. Условие должно быть логическим значением, т. е. оно должно быть выражением, которое всегда либо `True`, либо `False`.
@error_for_requires_iterable = Нельзя перебирать {0} в цикле `for`. Циклу `for` нужно предоставить последовательность для перебора. Пример:

`for i in range(5):`
Здесь `range(5)` возвращает последовательность `0,1,2,3,4`.
@error_no_loop_to_break = `break` используется только внутри цикла.
@error_no_loop_to_continue = `continue` используется только внутри цикла.
@error_no_function_to_return_from = `return` используется только внутри функции.
@error_missing_unlock = Чтобы использовать, нужно разблокировать.
@error_missing_x_unlock = Чтобы использовать, нужно разблокировать: «{0}».
@error_name_not_defined = {0}: не дано определение. Чтобы использовать, нужно присвоить значение переменной.
@error_missing_import = {0}: не дано определение. Похоже, переменная определена в файле: {1}. Возможно, он не импортирован.
Если файл импортирован, вероятно, возник циклический импорт (см. страницу документации по импорту).
@error_missing_import_before_unlock = {0}: не дано определение. Похоже, переменная определена в файле: {1}. Чтобы импортировать код из других файлов, нужно разблокировать импорт.
@error_missing_module_access = {0}: не дано определение. Похоже, эта переменная определена в файле {1}, который импортирован, но ты не используешь имя модуля. Необходимо обращаться к ней через имя модуля, вот так:

{1}`.`{0}
@error_call_before_def = {0}: не дано определение. Похоже, переменная определена где-то в этом файле, но определение еще не выполнено. Функции можно вызывать только после инструкции `def`.
@error_not_a_function = Была попытка вызвать то, что не является функцией. Часто к этому может приводить наличие переменной с тем же именем, что и у функции.
@error_invalid_const = {0} не существует.
@error_invalid_const2 = Этого не существует.
@error_max_stack_size_reached = Достигнут максимальный размер стека вызовов. Скорее всего, это произошло из-за чрезмерного количества вызовов рекурсивных функций.
@error_max_comparison_depth = Достигнута максимальная глубина сравнения. Такое может произойти, например, если сравниваются списки, которые содержат сами себя.
@error_assign_type_mismatch = Левая часть присваивания не соответствует правой.
@error_too_many_values_to_unpack = В правой части недостаточно значений для распаковки.
@error_not_enough_values = В правой части слишком много значений для распаковки в левую.
@error_empty_print = Для выполнения `print()` требуется хотя бы один аргумент.
@error_in_string = Невозможно проверить, содержится ли {0} в строке.
@error_collection_changed_size_during_iteration = Размер этой коллекции нельзя изменить внутри цикла `for`, который ее перебирает. Это связано с тем, что изменение размера коллекции сделает недействительным объект-итератор, используемый циклом `for`.
@error_wrong_use_of_max = Невозможно вычислить наибольшее значение для {0}.
@error_wrong_use_of_min = Невозможно вычислить наименьшее значение для {0}.
@error_function_as_condition = Попытка проверки, является ли функция {0} `True`. Это сам объект функции, а не ее возвращаемое значение. Ты хочешь вызвать функцию с помощью оператора вызова `()`?

В Python объекты функций являются истинными. Если они используются в качестве условий, то равноценны `True`, поэтому Python не выдал бы это сообщение об ошибке.

Это сообщение об ошибке безопасности. Если оно мешает, его можно отключить в настройках.
@error_function_in_operator = Попытка использования {1} для функции {0}. Это сам объект функции, а не ее возвращаемое значение. Ты хочешь вызвать функцию с помощью оператора вызова `()`?

Это сообщение об ошибке безопасности. Если оно мешает, его можно отключить в настройках.
@error_zero_step_size = Размер шага не может быть равен 0.
@error_sequence_too_large = Последовательность слишком велика для копирования.
@error_invalid_sim_unlocks = Начальные технологии недействительны. Нужна последовательность технологий или кортежей вида `(Unlock.Carrots, 3)`.
@error_invalid_sim_items = Начальные предметы недействительны. Нужен словарь, сопоставляющий предметы с числами, например `{Items.Hay : 100}`.
@error_invalid_sim_globals = Начальные глобальные переменные недействительны. Нужен словарь, сопоставляющий имена переменных со значениями, например `{"x" : 42}`.
@error_division_by_zero = О нет! Выполнено деление на `0`. Тебе едва удалось это пережить...
@error_negative_use_item = Количество используемых предметов должно быть не менее `1`. Было {0}.
@error_use_before_assign = Попытка прочитать переменную {0} до того, как ей было присвоено значение. 
Если хочешь изменить глобальную переменную, нужно использовать ключевое слово `global`, чтобы записать ее в глобальную область видимости.

`global x
x += 1`
@error_attribute_on_non_module = Нельзя присвоить атрибут файлу {0}.
@error_file_not_found = Файла ({0}) не существует.
@error_max_drones_reached = Превышен лимит дронов.
@error_dino_hat_already_used = Есть только одна шляпа динозавра, и она уже используется. Нельзя надеть ее на второй дрон.
@error_invalid_drone_id = Нет дрона с ID {0}.
@error_invalid_handle = {0} больше не существует.
@error_spawn_drone_builtin = `spawn_drone()` нельзя использовать со встроенными функциями напрямую. Нужно определить собственную функцию.